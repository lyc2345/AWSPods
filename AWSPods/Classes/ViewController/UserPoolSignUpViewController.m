//
//  UserPoolSignUpViewController.m
//  MySampleApp
//
//
// Copyright 2017 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-objc v0.16
//
//

#import "UserPoolSignUpViewController.h"
#import <AWSCognitoIdentityProvider/AWSCognitoIdentityProvider.h>
#import "AWSMobileHubHelper/AWSMobileHubHelper.h"
#import "UserPoolMFAViewController.h"
#import "Alert.h"

#import "LoginManager.h"

@interface UserPoolSignUpViewController()

@property (nonatomic, strong) NSString* sentTo;

@end

@interface UserPoolSignUpConfirmationViewController()

@property (nonatomic, strong) NSString* sentTo;
@property (strong, nonatomic) NSString *usernameString;

@end

@implementation UserPoolSignUpViewController

#pragma mark - UIViewController

- (void)viewDidLoad {
	[super viewDidLoad];
	
	[LoginManager shared].startMultiFactorAuthenticationHandler = ^id<AWSCognitoIdentityMultiFactorAuthentication>(){
		
		UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@"UserPools" bundle:nil];
		UserPoolMFAViewController *viewController = (UserPoolMFAViewController *)[storyboard instantiateViewControllerWithIdentifier: NSStringFromClass([UserPoolMFAViewController class])];
		dispatch_async(dispatch_get_main_queue(), ^{
			
			[self.navigationController pushViewController:viewController
																					 animated:YES];
		});
		
		//return viewController;
		return [LoginManager shared];
	};
}

- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
	if([@"SignUpConfirmSegue" isEqualToString:segue.identifier]){
		UserPoolSignUpConfirmationViewController *signUpConfirmationViewController = segue.destinationViewController;
		signUpConfirmationViewController.sentTo = self.sentTo;
		signUpConfirmationViewController.usernameString = self.userName.text;
	}
}

- (IBAction)onSignUp:(id)sender {
	
	[[LoginManager shared] signUpWithUser:self.userName.text password: self.password.text email: self.email.text tel: self.phone.text waitToConfirm:^(NSString *destination) {
		
		self.sentTo = destination;
		[self performSegueWithIdentifier:@"SignUpConfirmSegue" sender:sender];
		
	} success:^{
		
		__weak typeof(self) weakSelf = self;
		[[Alert new] showAlertWithTitle: @"Registration Complete"
														message: @"Registration was successful."
										 confirmHandler:^{
										 
											 [weakSelf.navigationController popToRootViewControllerAnimated:YES];
										 }];
		
	} fail:^(NSError *error){
		[[Alert new] showError: error
						confirmHandler:^{ }];
	}];
}

- (IBAction)onCancel:(id)sender {
	[self.navigationController popViewControllerAnimated:YES];
}

/**
 Ensure phone number starts with country code i.e. (+1)
 */
- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string; {
	if(textField == self.phone){
		NSRegularExpression *regex = [NSRegularExpression regularExpressionWithPattern:@"^\\+(|\\d)*$" options:0 error:nil];
		NSString *proposedPhone = [self.phone.text stringByReplacingCharactersInRange:range withString:string];
		if(proposedPhone.length != 0){
			return [regex numberOfMatchesInString:proposedPhone options:NSMatchingAnchored range:NSMakeRange(0, proposedPhone.length)]== 1;
		}
	}
	return YES;
}

@end

@implementation UserPoolSignUpConfirmationViewController

#pragma mark - UIViewController

- (void)viewDidLoad {
	[super viewDidLoad];
	
	self.userName.text = self.usernameString;
	self.codeSentTo.text = self.sentTo;
}

- (IBAction)onConfirm:(id)sender {

	__weak typeof(self) weakSelf = self;
	[[LoginManager shared] confirmSignUpWithUser: self.userName.text confirmCode: self.confirmationCode.text success:^{
		
		[[Alert new] showAlertWithTitle: @"Registration Complete"
														message: @"Registration was successful."
										 confirmHandler:^{
										 
											 [weakSelf.navigationController popToRootViewControllerAnimated:YES];
											 
										 }];
		
		
	} fail:^(NSError *error) {
		
		[[Alert new] showError: error
						confirmHandler:^{ }];
	}];
}

- (IBAction)onResend:(id)sender {

	[[LoginManager shared] onResendOfUser: self.userName.text Success:^(NSString *destination) {
		
		dispatch_async(dispatch_get_main_queue(), ^{
			[[Alert new] showAlertWithTitle: @"Code Resent"
															message: [NSString stringWithFormat:@"Code resent to: %@", destination]
											 confirmHandler:^{ }];
		});
		
	} fail:^(NSError *error) {
		
		dispatch_async(dispatch_get_main_queue(), ^{
			
			[[Alert new] showError: error
							confirmHandler:^{ }];
		});

	}];
}

- (IBAction)onCancel:(id)sender {
	[self.navigationController popViewControllerAnimated:YES];
}

@end

